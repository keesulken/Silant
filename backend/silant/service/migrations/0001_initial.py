# Generated by Django 4.1.7 on 2023-03-06 21:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('MNU', 'Конечный клиент'), ('SVC', 'Сервисная организация'), ('MFR', 'Представитель производителя')], default='MNU', max_length=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_number', models.CharField(max_length=255, unique=True)),
                ('engine_number', models.CharField(max_length=255)),
                ('transmission_number', models.CharField(max_length=255)),
                ('drive_axle_number', models.CharField(max_length=255)),
                ('steered_axle_number', models.CharField(max_length=255)),
                ('supply_contract_number_date', models.CharField(max_length=255)),
                ('dispatch_date', models.DateField()),
                ('consignee', models.TextField()),
                ('delivery_address', models.TextField()),
                ('equipment', models.TextField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='machines_in_use', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MachineDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MCN', 'Модель техники'), ('ENG', 'Модель двигателя'), ('TRM', 'Модель трансмиссии'), ('DRA', 'Модель ведущего моста'), ('STA', 'Модель управляемого моста'), ('NDT', 'Нет данных')], default='NDT', max_length=3)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RepairDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MNT', 'Вид ТО'), ('RPT', 'Способ восстановления'), ('UNT', 'Узел отказа'), ('MTH', 'Организация, проводившая ТО'), ('NDT', 'Нет данных')], default='NDT', max_length=3)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Reclamation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejection_date', models.DateField()),
                ('operating_time', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('spare_parts', models.TextField()),
                ('recovery_date', models.DateField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reclamations', to='service.machine')),
                ('repair_method', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='methods', to='service.repairdirectory')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reclamations', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='units', to='service.repairdirectory')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('operating_time', models.PositiveIntegerField()),
                ('work_order_number', models.CharField(max_length=255)),
                ('work_order_date', models.DateField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='service.machine')),
                ('maintenance_holder', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='holders', to='service.repairdirectory')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='maintenances', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='types', to='service.repairdirectory')),
            ],
        ),
        migrations.AddField(
            model_name='machine',
            name='drive_axle_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='drive_axles', to='service.machinedirectory'),
        ),
        migrations.AddField(
            model_name='machine',
            name='engine_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='engines', to='service.machinedirectory'),
        ),
        migrations.AddField(
            model_name='machine',
            name='machine_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='machine_models', to='service.machinedirectory'),
        ),
        migrations.AddField(
            model_name='machine',
            name='service_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='maintain_units', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='machine',
            name='steered_axle_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='steered_axles', to='service.machinedirectory'),
        ),
        migrations.AddField(
            model_name='machine',
            name='transmission_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='transmissions', to='service.machinedirectory'),
        ),
    ]
